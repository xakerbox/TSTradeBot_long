import TelegramBot from 'node-telegram-bot-api';
import { LimitOrder, Positions } from '../interfaces/binance/balance';
require('dotenv').config();

const bot = new TelegramBot(process.env.TELEGRAM_TOKEN, { polling: false });

export class TelegaBot {
  private chatIds: number[] = [165564370, 535043367];

  async sendBuyMessage(message: Positions) {
    this.chatIds.forEach((chatId) => {
      bot.sendMessage(chatId, `${message.symbol}: üü¢ –ü–æ–∫—É–ø–∫–∞ (MARKET|BUY) ${message.positionAmt} –º–æ–Ω–µ—Ç`);
    });
  }

  async sendSellMessage(message: Positions) {
    this.chatIds.forEach((chatId) => {
      bot.sendMessage(chatId, `${message.symbol}: üü¢ –ü–æ–∫—É–ø–∫–∞ (MARKET|SELL) ${message.positionAmt} –º–æ–Ω–µ—Ç`);
    });
  }

  async sendPutSellOrder(coin: string, qty: number, limitPrice: number ) {
    this.chatIds.forEach((chatId) => {
      bot.sendMessage(chatId, `${coin}: üü° –û—Ä–¥–µ—Ä (LIMIT|SELL) ${qty} –º–æ–Ω–µ—Ç –ø–æ $${limitPrice}`);
    });
  }

  async sendPutBuyOrder(message: LimitOrder) {
    this.chatIds.forEach((chatId) => {
      bot.sendMessage(chatId, `${message.coin}: üü° –û—Ä–¥–µ—Ä (LIMIT|BUY) ${message.qty} –º–æ–Ω–µ—Ç –ø–æ $${message.limitPrice}`);
    });
  }

  async sendPutSellMiddleOrder(message: LimitOrder) {
    this.chatIds.forEach((chatId) => {
      bot.sendMessage(chatId, `${message.coin}: üü° –û—Ä–¥–µ—Ä (LIMIT|SELL) ${message.qty} –º–æ–Ω–µ—Ç –ø–æ $${message.limitPrice}`);
    });
  }

  async sendSellOrderFinished(coin: string, profit: number) {
    this.chatIds.forEach((chatId) => {
      bot.sendMessage(chatId, `${coin}: üî¥ –ü—Ä–æ–¥–∞–∂–∞ (LIMIT|SELL).\n–û–±—à–∞—è –ø—Ä–∏–±—ã–ª—å —Å–æ —Å–¥–µ–ª–∫–∏ $${profit}`);
    });
  }

  async sendMiddlePutBuy(coin: string, tierNumber: number, qty: number, limitPrice: number) {
    this.chatIds.forEach((chatId) => {
      bot.sendMessage(chatId, `${coin}: ${tierNumber} —É—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ (LONG).\n–ü–µ—Ä–µ—Å—Ç–∞–≤–ª–µ–Ω (LIMIT|SELL) –æ—Ä–¥–µ—Ä –Ω–∞ ${qty} –º–æ–Ω–µ—Ç –ø–æ $${limitPrice}`);
    });
  }

  async sendMiddlePutSell(coin: string, tierNumber: number, qty: number, limitPrice: number) {
    this.chatIds.forEach((chatId) => {
      bot.sendMessage(chatId, `${coin}: ${tierNumber} —É—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ (SHORT).\n–ü–µ—Ä–µ—Å—Ç–∞–≤–ª–µ–Ω (LIMIT|BUY) –æ—Ä–¥–µ—Ä –Ω–∞ ${qty} –º–æ–Ω–µ—Ç –ø–æ $${limitPrice}`);
    });
  }
}
